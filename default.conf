server {
    listen 80;
    server_name hoteltracker.org;

    # Redirect all HTTP traffic to HTTPS
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # Frontend
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # API endpoints
    location /api/ {
        proxy_pass http://backend_new/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Rate limiting
        limit_req zone=hoteltracker burst=20 nodelay;

        # Caching
        proxy_cache hoteltracker_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 60m;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend_new/health;
        access_log off;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }

    # Prometheus metrics endpoint with basic auth
    location /metrics {
        auth_basic "Metrics";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://backend_new/metrics;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }

    # Allow certbot authentication
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# server {
#     listen 443 ssl;
#     server_name hoteltracker.org;

#     # SSL configuration
#     # ssl_certificate /etc/letsencrypt/live/hoteltracker.org/fullchain.pem;
#     # ssl_certificate_key /etc/letsencrypt/live/hoteltracker.org/privkey.pem;
#     # include /etc/letsencrypt/options-ssl-nginx.conf;
#     # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     # Security headers
#     # add_header X-Frame-Options "SAMEORIGIN";
#     # add_header X-XSS-Protection "1; mode=block";
#     # add_header X-Content-Type-Options "nosniff";
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

#     # Frontend
#     # location / {
#     #     root /usr/share/nginx/html;
#     #     try_files $uri $uri/ /index.html;
#     #     expires 30d;
#     #     add_header Cache-Control "public, no-transform";
#     # }

#     # API endpoints
#     # location /api/ {
#     #     proxy_pass http://backend_new/;
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;

#     #     # Rate limiting
#     #     limit_req zone=hoteltracker burst=20 nodelay;

#     #     # Caching
#     #     proxy_cache hoteltracker_cache;
#     #     proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
#     #     proxy_cache_valid 200 60m;
#     #     add_header X-Cache-Status $upstream_cache_status;
#     # }

#     # Health check endpoint
#     # location /health {
#     #     proxy_pass http://backend_new/health;
#     #     access_log off;
#     #     proxy_http_version 1.1;
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;
#     #     proxy_set_header Host $host;
#     # }

#     # Prometheus metrics endpoint with basic auth
#     # location /metrics {
#     #     auth_basic "Metrics";
#     #     auth_basic_user_file /etc/nginx/.htpasswd;
#     #     proxy_pass http://backend_new/metrics;
#     #     proxy_http_version 1.1;
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;
#     #     proxy_set_header Host $host;
#     # }
# }
